<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.0</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>org.gentar</groupId>
	<artifactId>rest-api</artifactId>
	<version>0.0.3-SNAPSHOT</version>
	<name>rest-api</name>
	<description>GenTaR REST API</description>

	<properties>
		<java.version>21</java.version>
		<equalsverifier.version>3.10</equalsverifier.version>

		<jacoco.plugin.version>0.8.11</jacoco.plugin.version>
		<skip.coverage>false</skip.coverage>

		<coverage.ratio.instruction>0.5800</coverage.ratio.instruction>
		<coverage.ratio.branch>0.3500</coverage.ratio.branch>
		<coverage.ratio.method>0.5400</coverage.ratio.method>
		<coverage.ratio.complexity>0.4600</coverage.ratio.complexity>
		<coverage.ratio.line>0.6000</coverage.ratio.line>
		<coverage.ratio.class>0.6800</coverage.ratio.class>
	</properties>

	<profiles>
		<profile>
			<id>skip-tests</id>
			<properties>
				<maven.test.skip>true</maven.test.skip>
			</properties>
		</profile>
		<profile>
			<id>dev</id>
			<properties>
				<activatedProperties>dev</activatedProperties>
			</properties>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<activatedProperties>test</activatedProperties>
			</properties>
		</profile>
	</profiles>

	<dependencies>
		<!-- Spring boot related-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>

		<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.springframework/spring-web -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>


		<!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.13</version>
		</dependency>



		<!-- Additional dependencies-->
		<!--*******************************************************-->

		<!-- https://mvnrepository.com/artifact/org.biojava/biojava-legacy -->
		<dependency>
			<groupId>org.biojava</groupId>
			<artifactId>biojava-legacy</artifactId>
			<version>1.9.4</version>
			<type>pom</type>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.biojava/sequencing -->
		<dependency>
			<groupId>org.biojava</groupId>
			<artifactId>sequencing</artifactId>
			<version>1.9.4</version>
		</dependency>


		<!-- other biojava jars as needed -->

		<!-- GenTaR core-->
		<dependency>
			<groupId>org.gentar</groupId>
			<artifactId>core</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- GenTaR Dtos-->
		<dependency>
			<groupId>org.gentar</groupId>
			<artifactId>dto</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!--Lombok-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
			<version>1.18.30</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt -->
		<!-- JWT support -->
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>0.9.1</version>
		</dependency>

		<!-- Others -->
		<!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-jpamodelgen -->
		<dependency>
			<groupId>org.hibernate.orm</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.0</version>
		</dependency>

		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>javax.activation-api</artifactId>
			<version>1.2.0</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-runtime</artifactId>
		</dependency>

		<dependency>
			<groupId>org.modelmapper</groupId>
			<artifactId>modelmapper</artifactId>
			<version>2.3.2</version>
		</dependency>

		<!--Allow to change names in collections when mapping json-->
		<dependency>
			<groupId>org.atteo</groupId>
			<artifactId>evo-inflector</artifactId>
			<version>1.2.2</version>
		</dependency>

		<!--Jackson modules for date management.-->
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-parameter-names</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
		</dependency>

		<!-- Auditing -->
		<dependency>
			<groupId>org.hibernate.orm</groupId>
			<artifactId>hibernate-envers</artifactId>
		</dependency>

		<!-- Dev Tools -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>

		<!-- Documentation of APIS-->
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Testing DB-->
		<!-- https://mvnrepository.com/artifact/org.dbunit/dbunit -->
		<dependency>
			<groupId>org.dbunit</groupId>
			<artifactId>dbunit</artifactId>
			<version>2.7.3</version>
			<scope>test</scope>
		</dependency>

		<!-- Database in memory -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.github.springtestdbunit/spring-test-dbunit -->
		<dependency>
			<groupId>com.github.springtestdbunit</groupId>
			<artifactId>spring-test-dbunit</artifactId>
			<version>1.3.0</version>
			<scope>test</scope>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.json/json -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20200518</version>
		</dependency>

		<!-- A dependency to to asserts in jsons -->
<!--		<dependency>-->
<!--			<groupId>org.skyscreamer</groupId>-->
<!--			<artifactId>jsonassert</artifactId>-->
<!--			<version>1.5.0</version>-->
<!--		</dependency>-->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.vaadin.external.google</groupId>
					<artifactId>android-json</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>2.2.2</version>
				<executions>
					<execution>
						<id>generate-docs</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<sourceDocumentName>restapi.adoc</sourceDocumentName>
							<backend>html</backend>
							<attributes>
								<snippets>${project.build.directory}/generated-snippets</snippets>
								<stylesheet>themes/riak.css</stylesheet>
								<version>${project.version}</version>
								<date>${maven.build.timestamp}</date>
							</attributes>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.springframework.restdocs</groupId>
						<artifactId>spring-restdocs-asciidoctor</artifactId>
                        <version>2.0.6.RELEASE</version>
					</dependency>
				</dependencies>
			</plugin>

            <!--This is to package the documentation-->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.outputDirectory}/static/docs
							</outputDirectory>
							<resources>
								<resource>
									<directory>
										${project.build.directory}/generated-docs
									</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.plugin.version}</version>
				<configuration>
					<dataFile>${project.build.directory}/coverage-reports/jacoco.exec</dataFile>
					<outputDirectory>${project.build.directory}/coverage-reports/</outputDirectory>
					<skip>true</skip>
					<excludes>
						<exclude>**/*Config.*</exclude>
						<exclude>**/*ConfigProd.*</exclude>
						<exclude>**/*Application.*</exclude>
						<exclude>**/*ConfigDev.*</exclude>
						<exclude>**/*ConfigNonDev.*</exclude>
						<exclude>**/*Constants.*</exclude>
						<exclude>**/*Properties.*</exclude>
						<exclude>**/*Exception.*</exclude>
						<exclude>**/*Serializer.*</exclude>
						<exclude>**/*Deserializer.*</exclude>
						<exclude>**/constants/**/*</exclude>
						<exclude>**/constants/*.*</exclude>
						<exclude>**/*Advice.*</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<skip>${skip.coverage}</skip>
							<destFile>${project.build.directory}/coverage-reports/jacoco.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>report</id>
						<!-- Run before maven-scr-plugin adds in the service methods -->
						<phase>integration-test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<skip>${skip.coverage}</skip>
						</configuration>
					</execution>
					<execution>
						<id>check</id>
						<!-- Run before maven-scr-plugin adds in the service methods -->
						<phase>integration-test</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<skip>${skip.coverage}</skip>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>INSTRUCTION</counter>
											<value>COVEREDRATIO</value>
											<minimum>${coverage.ratio.instruction}</minimum>
										</limit>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>${coverage.ratio.line}</minimum>
										</limit>
										<limit>
											<counter>BRANCH</counter>
											<value>COVEREDRATIO</value>
											<minimum>${coverage.ratio.branch}</minimum>
										</limit>
										<limit>
											<counter>METHOD</counter>
											<value>COVEREDRATIO</value>
											<minimum>${coverage.ratio.method}</minimum>
										</limit>
										<limit>
											<counter>CLASS</counter>
											<value>COVEREDRATIO</value>
											<minimum>${coverage.ratio.class}</minimum>
										</limit>
										<limit>
											<counter>COMPLEXITY</counter>
											<value>COVEREDRATIO</value>
											<minimum>${coverage.ratio.complexity}</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
